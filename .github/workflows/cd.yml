# Nom du workflow, tel qu’il apparaîtra dans l'onglet Actions
name: CD devops 2025 

# Trigger à chaque push vers main/develop ou sur les pull_request
on:
  workflow_run:
    workflows: ["CI devops 2025"]  
    types:
      - completed

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
   # On fait ce job si le workflow "CI devops réussi" et si il a été run sur la branche main
   if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
   # run only when code is compiling and tests are passing
   runs-on: ubuntu-24.04
  
   # steps to perform in job
   steps:
     - name: Checkout code
       uses: actions/checkout@v4

     - name: Login to DockerHub
       run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
  
     - name: Build image and push backend
       uses: docker/build-push-action@v6
       with:
         # relative path to the place where source code with Dockerfile is located
         context: TP2/simple-api
         # Note: tags has to be all lower-case
         tags:  ${{secrets.DOCKER_USERNAME}}/tp-devops-simple-api:latest
         push: ${{ github.ref == 'refs/heads/main' }}
  
     - name: Build image and push database
       uses: docker/build-push-action@v6
       with:
           # relative path to the place where source code with Dockerfile is located
           context: TP2/database
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/tp-devops-database:latest
           push: ${{ github.ref == 'refs/heads/main' }}
  
     - name: Build image and push httpd
       uses: docker/build-push-action@v6
       with:
           # relative path to the place where source code with Dockerfile is located
           context: TP2/http-server
           # Note: tags has to be all lower-case
           tags:  ${{secrets.DOCKER_USERNAME}}/tp-devops-http-server:latest
           push: ${{ github.ref == 'refs/heads/main' }}

